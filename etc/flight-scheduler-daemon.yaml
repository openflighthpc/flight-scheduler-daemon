#==============================================================================
# Copyright (C) 2020-present Alces Flight Ltd.
#
# This file is part of FlightSchedulerDaemon.
#
# This program and the accompanying materials are made available under
# the terms of the Eclipse Public License 2.0 which is available at
# <https://www.eclipse.org/legal/epl-2.0>, or alternative license
# terms made available by Alces Flight Ltd - please direct inquiries
# about licensing to licensing@alces-flight.com.
#
# FlightSchedulerDaemon is distributed in the hope that it will be useful, but
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR
# IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS
# OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A
# PARTICULAR PURPOSE. See the Eclipse Public License 2.0 for more
# details.
#
# You should have received a copy of the Eclipse Public License 2.0
# along with FlightSchedulerDaemon. If not, see:
#
#  https://opensource.org/licenses/EPL-2.0
#
# For more information on FlightSchedulerDaemon, please visit:
# https://github.com/openflighthpc/flight-scheduler-daemon
#==============================================================================

# Auth type.  The authentication type to use.
# Valid values are 'basic', 'munge'.
# Can be set from the environment variable FLIGHT_SCHEDULER_AUTH_TYPE which
# takes precedence over this setting.
# Default: munge
# auth_type: "munge"

# The URL of the flight scheduler controller.
# Environment variable FLIGHT_SCHEDULER_CONTROLLER_URL takes precedence over
# this setting.
# Default: http://127.0.0.1:6307/v0/ws
# controller_url: http://127.0.0.1:6307/v0/ws

# The port range to start the Step Daemons on. Both the start and end port
# should be specified. The maximum possible range is 1 to 65535.
# Environment variables FLIGHT_SCHEDULER_STEPD_PORT_START and
# FLIGHT_SCHEDULER_STEPD_PORT_END takes precedence over this setting.
# Defualt (start): 50000, Default (end): 51000
# stepd_port_start:
# stepd_port_end:

# The name of the node the daemon is running on.
# Environment variable FLIGHT_SCHEDULER_NODE_NAME takes precedence over this
# setting.
# Default: The output from `hostname --short`.
# node_name:

# The type of the node that is reported to the controller
# Environment variable FLIGHT_SCHEDULER_NODE_TYPE takes precedence over this
# setting. This config is optional and does not have a default.
# node_type:

# Log level.
# Environment variable FLIGHT_SCHEDULER_LOG_LEVEL takes precedence over this
# setting.
# Default: info
# log_level: info

# Spool directory.
# Environment variable FLIGHT_SCHEDULER_SPOOL_DIR takes precedence over this
# setting.
# Default: The relative directory ./var/spool/.  Relative to the root of
# the flight scheduler installation.
# spool_dir: './var/spool/'

# Maximum Connection Sleep
# The maximum wait time between failed attempts to connect to the controller.
# A shorter period will be initially used before backing off to this period.
#
# It also controls how long a job step will wait for its client connection.
# This connection does not have incremental backoff and the job step will be
# exited after it elapses.
#
# The time is given in seconds
# Environment variable FLIGHT_SCHEDULER_MAX_CONNECTION_SLEEP takes precedence
# over this setting.
# Default: 60
# max_connection_sleep:

# Generic sleep periods
# The generic sleep period used to preform various checks. There are two
# configurable sleep periods; a 'short' and 'long'. The 'long' period
# should be on the order of many seconds. The 'short' period may be a
# fraction of a second.
# Environment variable FLIGHT_SCHEDULER_GENERIC_SHORT_SLEEP and
# FLIGHT_SCHEDULER_GENERIC_LONG_SLEEP take precedence over these
# settigns.
# Defaults: 0.1 short/ 5 long
# generic_short_sleep:
# generic_long_sleep:
